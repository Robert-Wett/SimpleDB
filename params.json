{"name":"SimpleDB","tagline":"Simple DB implementation in python with persistence and 'write-ahead' logging...","body":"SimpleDB\r\n========\r\nA simple key/value DB implementation in python / Learning exercise with persistence and write-ahead-logging.\r\n##Command Set / API\r\n#### `SET <name> <value>`- Set the variable `name` to the value `value`. Neither variable names nor values can contain spaces.\r\n![SET](http://i.imgur.com/CXD43nR.png)\r\n####`GET <name>` - Get current value for a variable. Note that the context of the value for the variable is dependent on the transaction scope.\r\n![GET](http://i.imgur.com/FznLvVP.png)\r\n####`UNSET` - Delete the variable and it's value from the database completely.\r\n![UNSET](http://i.imgur.com/FBzW2tz.png)\r\n####`NUMEQUALTO <value>` - Get the current number of variables that are set to `value`\r\n![NUMEQUALTO](http://i.imgur.com/19pRYZn.png)\r\n####`BEGIN` - Start a transaction that will only be written to the database if issued the `COMMIT` command. Variables within a transaction will shadow their corresponding variables in the parent scope. In the case of an exit or crash, every command that is issued within a `BEGIN` clause will be persisted to the `pending.txt` file to be replayed if wanted. Successive transactions are indented to better display the depth.\r\n![BEGIN1](http://i.imgur.com/RQqZm7X.png)  \r\n\r\n![BEGIN2](http://i.imgur.com/uBrUmWj.png)  \r\n####`COMMIT`-Save the currently set variables to database. Note that when issuing this command, it will commit the values of the **last** transaction currently in.\r\n![COMMIT](http://i.imgur.com/dJJWlYR.png)\r\n####`ROLLBACK` - Discard current transaction and rollback to previously defined values in the parent transaction.\r\n![ROLLBACK1](http://i.imgur.com/diwXBCv.png)  \r\n\r\n![ROLLBACK2](http://i.imgur.com/0hgZtfL.png)\r\n####`Display` - Shows the currently committed values for all variables\r\n\r\n##Somewhat Nifty - simple write-ahead-logging\r\n![WRITEAHEAD1](http://i.imgur.com/3rJC1dQ.png)  \r\n\r\n![WRITEAHEAD2](http://i.imgur.com/tv8Hwjx.png)  \r\n####Limitations\r\n - only accepts `int` type for values\r\n - no concurrency\r\n - limited command set\r\n - lots of other stuffs\r\n  \r\n\r\n####things I tried to do\r\n - All commands persisted to a simple `.sdb` file\r\n - All commands issued within a transaction persisted to `pending.txt`\r\n   - Simple write-ahead logging implementation\r\n   - Prompts user to re-load any pending transactions on program crash\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}